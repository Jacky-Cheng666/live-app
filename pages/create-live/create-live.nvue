<template>
	<view class="flex-1">
		<live-pusher id='livePusher' ref="livePusher" class="livePusher flex-1" :url="url" :mode="mode"
			:enable-camera="enableCamera" :auto-focus="true" :device-position="position" :beauty="beauty"
			:whiteness="whiteness" aspect="9:16" @statechange="statechange" @netstatus="netstatus" @error="error"
			:style="'height: '+windowHeight+'px;'" style="width: 750rpx;"></live-pusher>
		<view v-if="showBars">
			<view class="position-fixed left-0 right-0 flex" :style="`top: ${statusBarHeight}px`">
				<view class="flex justify-center align-center" style="width: 90rpx;height: 90rpx;" @tap="back">
					<text class="iconfont text-white">&#xe607;</text>
				</view>
				<view class="flex-1 p-2 flex align-center" style="height: 160rpx;background-color: rgba(0,0,0,.2);">
					<view class="bg-white rounded position-relative" style="width: 120rpx;height: 120rpx;"
						@tap="chooseCover">
						<image class="" :src="form.cover || '/static/gift/4.png'" style="width: 120rpx;height: 120rpx;">
						</image>
						<text class="text-white position-absolute left-0 right-0 bottom-0 font">更换封面</text>
					</view>
					<view class="flex-1 ml-2">
						<input class="mb-2 text-white" v-model="form.title" type="text" placeholder="请输入直播标题" />
						<!-- <text class="text-white font">#选择分类</text> -->
					</view>
				</view>
				<view class="" style="width: 100rpx;">
					<view class="flex flex-column justify-center align-center" style="height: 120rpx"
						@tap="switchCarema">
						<text class="iconfont text-white mb-1">&#xe605;</text>
						<text class="text-white font">翻转</text>
					</view>
					<view class="flex flex-column justify-center align-center" style="height: 120rpx"
						@tap="openPopup('mode')">
						<text class="iconfont text-white mb-1">&#xe60c;</text>
						<text class="text-white font">画质</text>
					</view>
					<view class="flex flex-column justify-center align-center" style="height: 120rpx"
						@tap="openPopup('beauty')">
						<text class="iconfont text-white mb-1">&#xe632;</text>
						<text class="text-white font">美颜</text>
					</view>
					<view class="flex flex-column justify-center align-center" style="height: 120rpx"
						@tap="openPopup('whiteness')">
						<text class="iconfont text-white mb-1">&#xe631;</text>
						<text class="text-white font">美白</text>
					</view>
				</view>
			</view>

			<!-- 开始直播按钮 -->
			<view class="position-fixed bg-main flex justify-center align-center rounded-circle"
				style="left: 100rpx;right: 100rpx;bottom: 100rpx;height: 120rpx" @tap="openLiveRoom">
				<text class="text-white">开始视频直播</text>
			</view>
		</view>


		<!-- 修改直播参数弹出层 -->
		<uni-popup ref="popup" type="bottom">
			<view class="bg-white">
				<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{popTitle}}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popupType === 'mode'">
					<view class="flex justify-center align-center py-2" :class="mode===item.type?'bg-main':''"
						v-for="(item,index) in modeList" :key="index" @tap="chooseMode(item)">
						<text class="font-md" :class="mode===item.type?'text-white':''">{{item.desc}}</text>
					</view>
				</view>
				<!-- 美颜选择 -->
				<view class="px-2" v-else-if="popupType==='beauty'">
					<slider :min="0" :max="9" :step="1" :value="beauty" show-value :block-size="18"
						block-color="#0094ff" @change="handleSliderChange"></slider>
				</view>
				<!-- 美白选择 -->
				<view class="px-2" v-else-if="popupType==='whiteness'">
					<slider :min="0" :max="9" :step="1" :value="whiteness" show-value :block-size="18"
						block-color="#0094ff" @change="handleSliderChange"></slider>
				</view>

				<view class="f-divider"></view>
				<view class="flex align-center justify-center" hover-class="bg-light" style="height: 90rpx;"
					@tap="$refs.popup.close()">
					<text class="font-md">取消</text>
				</view>
			</view>
		</uni-popup>

	</view>
</template>

<script>
	import $H from '@/common/request.js'
	import $C from '@/common/config.js'
	export default {
		data() {
			return {
				url: "",
				mode: "SD",
				enableCamera: true,
				position: "front",
				beauty: 0,
				whiteness: 0,
				windowHeight: 0,
				context: null,
				statusBarHeight: 0,
				popupType: "mode",
				modeList: [{
					type: "SD",
					desc: "标清"
				}, {
					type: "HD",
					desc: "高清"
				}, {
					type: "FHD",
					desc: "超清"
				}],
				showBars: true,
				form: {
					title: '',
					cover: ''
				}
			}
		},
		onLoad() {
			let res = uni.getSystemInfoSync()
			this.windowHeight = res.windowHeight
			this.statusBarHeight = res.statusBarHeight
		},
		onBackPress() {
			this.showBars = false
		},
		computed: {
			popTitle() {
				let o = {
					mode: "画质",
					beauty: "美颜",
					whiteness: "美白"
				}
				return o[this.popupType]
			}
		},
		onReady() {
			// 注意：需要在onReady中 或 onLoad 延时
			this.context = uni.createLivePusherContext("livePusher", this);
			// 开启预览
			this.startPreview()

		},
		methods: {
			chooseCover() {
				uni.chooseImage({
					count: 1,
					success: res => {
						// console.log('res', res.tempFilePaths[0])
						$H.upload('/upload', {
							filePath: res.tempFilePaths[0],
						}, (p) => {
							// console.log('percent', p)
						}).then(res => {
							// console.log('res', res)
							this.form.cover = $C.baseUrl + res.url
						})
					}
				})
			},
			back() {
				uni.navigateBack({
					delta: 1
				})
			},
			// 开启预览
			startPreview() {
				this.context.startPreview({
					success: (e) => {
						console.log('preview', e)
					}
				})
			},
			// 直播状态变化
			statechange(e) {
				console.log('statechange', e)
			},
			// 直播网络变化
			netstatus(e) {
				console.log('netstatus', e)
			},
			// 监听错误
			error(e) {
				console.log('error', e)
			},
			switchCarema() {
				this.context.switchCamera({
					success: () => {
						this.position = this.position === 'back' ? 'front' : 'back'
					}
				})
			},
			openPopup(type) {
				this.popupType = type
				this.$refs.popup.open()
			},
			// 画质选择
			chooseMode(item) {
				this.mode = item.type
				uni.showToast({
					title: `画质切换为${item.desc}`,
					icon: 'none'
				});
				this.$refs.popup.close()
			},
			// 改变美颜
			handleSliderChange(e) {
				this[this.popupType] = e.detail.value
			},
			// 创建直播间
			async openLiveRoom() {

				let res = await $H.post('/live/create', this.form, {
					token: true
				})
				console.log('res', res)
				uni.redirectTo({
					url: '/pages/live-room/live-room?options=' + JSON.stringify({
						mode: this.mode,
						position: this.position,
						beauty: this.beauty,
						whiteness: this.whiteness,
					}) + '&data='+ encodeURIComponent(JSON.stringify(res))
				})
			}
		}
	}
</script>

<style>

</style>
