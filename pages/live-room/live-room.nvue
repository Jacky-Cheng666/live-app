<template>
	<view class="page">
		<live-pusher id='livePusher' ref="livePusher" class="livePusher flex-1" :url="url" :mode="mode"
			:enable-camera="enableCamera" :auto-focus="true" :device-position="position" :beauty="beauty"
			:whiteness="whiteness" aspect="9:16" @statechange="statechange" @netstatus="netstatus" @error="error"
			:style="'height: '+windowHeight+'px;'" style="width: 750rpx;"></live-pusher>

		<!-- 上部分 -->
		<view class="position-fixed left-0 right-0" :style="`top: ${statusBarH}`">
			<!-- 个人信息|观看详细信息 -->
			<view class="px-2 flex justify-between" style="height: 80rpx;">
				<!-- 左边 -->
				<view class="flex-1 flex justify-between align-center rounded-circle"
					style="background-color: rgba(0,0,0,.4);">
					<view class="p flex align-center">
						<image class="rounded-circle" src="/static/tabbar/min.png" style="width: 70rpx;height: 70rpx;">
						</image>
						<view class="ml-1">
							<text class="text-white font">昵称</text>
							<text class="text-white font">999+</text>
						</view>
					</view>
					<!-- 关注 -->
					<view class="rounded-circle flex justify-center align-center bg-danger mr-1"
						style="width: 70rpx;height: 70rpx;">
						<text class="text-white font-big">+</text>
					</view>
				</view>
				<!-- 右边 -->
				<view class="flex-1 flex align-center rounded-circle px-1 ml-5"
					style="background-color: rgba(0,0,0,.4);">
					<scroll-view :show-scrollbar="false" class="flex-1 flex" scroll-x="true">
						<image v-for="i in 20" :key="i" class="rounded-circle" src="/static/tabbar/min.png"
							style="width: 70rpx;height: 70rpx;">
					</scroll-view>
					<view class="rounded-circle flex justify-center align-center bg-danger"
						style="width: 70rpx;height: 70rpx;">
						<text class="text-white font-sm">100</text>
					</view>
				</view>
			</view>
			<!-- 金币 -->
			<view class="px-2 my-2 flex align-center" style="height: 80rpx;">
				<view class="flex align-center rounded-circle p-2"
					style="background-color: rgba(0,0,0,.4);width: 300rpx;">
					<text class="text-warning font mr-1">金币</text>
					<text class="text-white font">0</text>
				</view>
			</view>
			<!-- 收到礼物 -->
			<f-gift ref="gift"></f-gift>
		</view>

		<!-- 弹幕部分 -->
		<f-danmu ref="danmu"></f-danmu>

		<!-- 底部 -->
		<view class="position-fixed left-0 right-0 bottom-0 flex align-center justify-between" style="height: 120rpx;">
			<view class="flex-1 flex flex-column justify-center align-center" v-for="(item,index) in btns" :key="index"
				@tap="handleBottomEvent(item)">
				<text class="iconfont text-white mb-1">{{item.icon}}</text>
				<text class="text-white font">{{item.name}}</text>
			</view>
		</view>

		<uni-popup ref="popup" type="bottom">
			<view class="bg-white">
				<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{popTitle}}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popupType === 'mode'">
					<view class="flex justify-center align-center py-2" :class="mode===item.type?'bg-main':''"
						v-for="(item,index) in modeList" :key="index" @tap="chooseMode(item)">
						<text class="font-md" :class="mode===item.type?'text-white':''">{{item.desc}}</text>
					</view>
				</view>
				<!-- 美颜选择 -->
				<view class="px-2" v-else-if="popupType==='beauty'">
					<slider :min="0" :max="9" :step="1" :value="beauty" show-value :block-size="18"
						block-color="#0094ff" @change="handleSliderChange"></slider>
				</view>
				<!-- 美白选择 -->
				<view class="px-2" v-else-if="popupType==='whiteness'">
					<slider :min="0" :max="9" :step="1" :value="whiteness" show-value :block-size="18"
						block-color="#0094ff" @change="handleSliderChange"></slider>
				</view>

				<!-- 更多 -->
				<view class="flex flex-wrap" v-else-if="popupType==='more'">
					<view class="flex flex-column justify-center align-center" style="width: 150rpx;height: 150rpx;">
						<text class="iconfont mb-1">&#xe611;</text>
						<text class="font">暂停</text>
					</view>
					<view class="flex flex-column justify-center align-center" style="width: 150rpx;height: 150rpx;"
						@tap="back">
						<text class="iconfont mb-1">&#xe64d;</text>
						<text class="font">退出</text>
					</view>
				</view>

				<view class="f-divider"></view>
				<view class="flex align-center justify-center" hover-class="bg-light" style="height: 90rpx;"
					@tap="closePopup">
					<text class="font-md">取消</text>
				</view>
			</view>
		</uni-popup>


	</view>
</template>

<script>
	import fGift from '@/components/live/f-gift.vue'
	import fDanmu from '@/components/live/f-danmu.vue'
	import demoGifts from '@/demo/gifts.js'
	export default {
		components: {
			fGift,
			fDanmu
		},
		data() {
			return {
				url: "",
				enableCamera: true,
				statusBarH: 0,
				windowHeight: 0,
				context: null,
				content: "",
				gifts: [],
				giftActiveId: 0,
				mode: "SD",
				position: "front",
				beauty: 0,
				whiteness: 0,
				btns: [{
						name: "翻转",
						icon: "\ue605",
						event: "switchCarema"
					},
					{
						name: "画质",
						icon: "\ue60c",
						event: "openPopup",
						params: "mode"
					},
					{
						name: "美颜",
						icon: "\ue632",
						event: "openPopup",
						params: "beauty"
					}, {
						name: "美白",
						icon: "\ue631",
						event: "openPopup",
						params: "whiteness"
					},
					{
						name: "更多",
						icon: "\ue84b",
						event: "openPopup",
						params: "more"
					}
				],
				popupType: "mode",
				modeList: [{
					type: "SD",
					desc: "标清"
				}, {
					type: "HD",
					desc: "高清"
				}, {
					type: "FHD",
					desc: "超清"
				}],
			}
		},
		computed: {
			popTitle() {
				let o = {
					mode: "画质",
					beauty: "美颜",
					whiteness: "美白",
					more: "更多"
				}
				return o[this.popupType]
			}
		},
		onLoad(e) {
			let res = uni.getSystemInfoSync()
			this.statusBarH = res.statusBarHeight
			this.windowHeight = res.windowHeight
			// 演示数据
			this.gifts = demoGifts
			let options = JSON.parse(e.options)
			this.mode = options.mode
			this.beauty = options.beauty
			this.position = options.position
			this.whiteness = options.whiteness
		},
		onReady() {
			this.context = uni.createLivePusherContext("livePusher", this);
			// 开启预览
			this.startPreview()

			// 送礼物演示
			// setInterval(() => {
			// 	this.$refs.gift.send({
			// 		username: "池大为",
			// 		avatar: "",
			// 		gift_name: "豪华游艇",
			// 		gift_image: "/static/gift/3.png",
			// 		num: 9
			// 	})
			// }, 3000)

			// 发送弹幕演示
			let id = 1
			setInterval(() => {
				this.$refs.danmu.send({
					id,
					name: '池厅长' + id,
					content: '听说校花俞小曼很好看'
				})
				id++
			}, 3000)
		},
		methods: {
			// 开启预览
			startPreview() {
				this.context.startPreview({
					success: (e) => {
						console.log('preview', e)
					}
				})
			},
			// 直播状态变化
			statechange(e) {
				console.log('statechange', e)
			},
			// 直播网络变化
			netstatus(e) {
				console.log('netstatus', e)
			},
			// 监听错误
			error(e) {
				console.log('error', e)
			},
			switchCarema() {
				this.context.switchCamera({
					success: () => {
						this.position = this.position === 'back' ? 'front' : 'back'
					}
				})
			},
			openPopup(type) {
				this.popupType = type
				this.$refs.popup.open()
			},
			// 画质选择
			chooseMode(item) {
				this.mode = item.type
				uni.showToast({
					title: `画质切换为${item.desc}`,
					icon: 'none'
				});
				this.$refs.popup.close()
			},
			// 改变美颜
			handleSliderChange(e) {
				this[this.popupType] = e.detail.value
			},
			openInput() {
				this.$refs.input.open()
			},
			submit() {
				if (this.content.length === 0) return
				this.$refs.danmu.send({
					id: new Date().getTime(),
					name: '马翠张',
					content: this.content.trim()
				})
				this.content = ''
				this.$refs.input.close()
			},
			back() {
				uni.showModal({
					title: '提示',
					content: '正在直播中，是否要退出',
					showCancel: true,
					cancelText: '取消',
					confirmText: '确认',
					success: res => {
						uni.navigateBack({
							delta: 1
						})
					},

				});

			},
			handleBottomEvent(item) {
				this[item.event](item.params)
			},
			closePopup() {
				this.$refs.popup.close()
			}
		}
	}
</script>

<style>
	.page {
		flex: 1;
	}

	.btn {
		height: 80rpx;
		border-radius: 100rpx;
		background-color: rgba(255, 255, 255, .12);
		align-items: center;
		justify-content: center;
	}
</style>
